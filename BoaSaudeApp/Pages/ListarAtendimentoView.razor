@page "/"
@inject Service.Interface.IAtendimentoService atendimentoService;
@using Dominio.AtendimentoModel;

<div class="container-fluid m-2">
    <div class="flex-column">
        <h3>Atendimentos</h3>

        <div class="form-inline">
            <span for="select-status" class="control-label">Localização: </span>
            <select class="form-control mr-2 ml-2" id="select-localizacao" aria-label="Localização">
                <option selected>Todos</option>
                <option value="1">One</option>
                <option value="2">Two</option>
                <option value="3">Three</option>
            </select>

            <span for="select-status" class="control-label">Status: </span>
            <select class="form-control ml-2" id="select-status" aria-label="Status" @onchange="((e) => FiltrarAtendimentoPorStatus(e))">
                <option selected>Todos</option>
                <option value=@(Convert.ToInt32(StatusProcessoEnum.Apuracao))>Apuração</option>
                <option value=@(Convert.ToInt32(StatusProcessoEnum.Conferencia))>Conferência</option>
                <option value=@(Convert.ToInt32(StatusProcessoEnum.Faturamento))>Faturamento</option>
            </select>
        </div>
    </div>
    <br />

    <div class="table-responsive">
        <table class="table caption-top">
            <caption>Lista de atendimentos</caption>
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Nome</th>
                    <th scope="col">Localização</th>
                    <th scope="col" colspan="2">Status</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>

                @foreach (var atendimento in _atendimentosFiltrados)
                {
                    currentCount++;
                    <tr>
                        <th scope="row">@currentCount</th>
                        <td>@atendimento.Associado.Nome</td>
                        <td>@atendimento.Cidade.Descricao</td>
                        <td class="@ClassPorStatus(atendimento.StatusProcesso.ToString())" colspan="2">@atendimento.StatusProcesso.ToString()</td>
                        <td class="d-flex justify-content-end"><button class="btn btn-primary" type="submit">Visualizar</button></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private int currentCount = 0;
    private IEnumerable<Atendimento> _atendimentos = new List<Atendimento>();
    private IEnumerable<Atendimento> _atendimentosFiltrados = new List<Atendimento>();

    private string ClassPorStatus(string status)
    {
        switch (status)
        {
            case "Apuracao":
                return "table-danger";
            case "Conferencia":
                return "table-warning";
            case "Faturamento":
                return "table-success";
            default:
                return "table-warning";
        }
    }

    private void FiltrarAtendimentoPorStatus(ChangeEventArgs eventArgs)
    {
        if (eventArgs.Value.Equals("Todos"))
        {
            _atendimentosFiltrados = _atendimentos;
            return;
        }

        var status = (StatusProcessoEnum)Convert.ToInt32(eventArgs.Value);

        _atendimentosFiltrados = _atendimentos
            .Where(e => e.StatusProcesso == status);
    }

    protected override async Task OnInitializedAsync()
    {
        _atendimentos = await atendimentoService.ListarAtendimentos();
        _atendimentosFiltrados = _atendimentos;
    }
}
