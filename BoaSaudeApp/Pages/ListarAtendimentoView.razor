@page "/"
@inject Service.Interface.IAtendimentoService atendimentoService;
@using Dominio.AtendimentoModel;

<div class="container-fluid m-2">
    <div class="flex-column">
        <h3>Atendimentos</h3>

        <div class="form-inline">
            <select class="form-control mr-2" aria-label="Localização">
                <option selected>Localização</option>
                <option value="1">One</option>
                <option value="2">Two</option>
                <option value="3">Three</option>
            </select>

            <select class="form-control" aria-label="Status">
                <option selected>Status</option>
                <option value="1">One</option>
                <option value="2">Two</option>
                <option value="3">Three</option>
            </select>
        </div>
    </div>
    <br />

    <div class="table-responsive">
        <table class="table caption-top">
            <caption>Lista de atendimentos</caption>
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Nome</th>
                    <th scope="col">Localização</th>
                    <th scope="col" colspan="2">Status</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var atendimento in _atendimentos)
                {
                    <tr>
                        <th scope="row">1</th>
                        <td>@atendimento.Associado.Nome</td>
                        <td>@atendimento.Cidade.Descricao</td>
                        <td class="@ClassPorStatus(atendimento.StatusProcesso.ToString())" colspan="2">@atendimento.StatusProcesso.ToString()</td>
                        <td class="d-flex justify-content-end"><button class="btn btn-primary" type="submit">Visualizar</button></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private IEnumerable<Atendimento> _atendimentos = new List<Atendimento>();

    private string ClassPorStatus(string status)
    {
        switch (status)
        {
            case "Apuracao":
                return "table-danger";
            case "Conferencia":
                return "table-warning";
            case "Faturamento":
                return "table-success";
            default:
                return "table-warning";
        }
    }

    protected override async Task OnInitializedAsync()
    {
        _atendimentos = await atendimentoService.ListarAtendimentos();
    }
}
